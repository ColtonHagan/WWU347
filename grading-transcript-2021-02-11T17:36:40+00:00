{"version": 2, "width": 145, "height": 54, "timestamp": 1613065000, "env": {"SHELL": "/bin/bash", "TERM": "screen-256color"}}
[0.149451, "o", "\u001b[01;32mvagrant@ubuntu-bionic\u001b[00m:\u001b[01;34m/vagrant/grading-347-2pm/repos/haganc3\u001b[00m$ "]
[0.341546, "o", "l"]
[0.4399, "o", "\r\n"]
[0.445976, "o", "\u001b[0m\u001b[01;34mWordCount\u001b[0m/  \u001b[01;34mc-debug\u001b[0m/  feedback  \u001b[01;34mfilesec\u001b[0m/  \u001b[01;34mfind\u001b[0m/  grading-transcript-2021-02-11T17:36:40+00:00  name.txt  raven.txt\r\n"]
[0.446426, "o", "\u001b[01;32mvagrant@ubuntu-bionic\u001b[00m:\u001b[01;34m/vagrant/grading-347-2pm/repos/haganc3\u001b[00m$ "]
[0.859237, "o", "c"]
[1.019176, "o", "d"]
[1.089739, "o", " "]
[1.318532, "o", "W"]
[1.446777, "o", "o"]
[1.495153, "o", "rdCount/"]
[1.570117, "o", "\r\n"]
[1.571912, "o", "\u001b[01;32mvagrant@ubuntu-bionic\u001b[00m:\u001b[01;34m/vagrant/grading-347-2pm/repos/haganc3/WordCount\u001b[00m$ "]
[1.658989, "o", "l"]
[1.958796, "o", "\r\n"]
[1.962267, "o", "ActivityJournal.txt  wwuwc.c\r\n"]
[1.962711, "o", "\u001b[01;32mvagrant@ubuntu-bionic\u001b[00m:\u001b[01;34m/vagrant/grading-347-2pm/repos/haganc3/WordCount\u001b[00m$ "]
[2.358767, "o", "b"]
[2.49836, "o", "a"]
[2.566985, "o", "r"]
[2.61882, "o", " "]
[2.866263, "o", "A"]
[2.999779, "o", "c"]
[3.623127, "o", "\b\u001b[K"]
[3.809268, "o", "\b\u001b[K"]
[3.969769, "o", "\b\u001b[K"]
[4.130775, "o", "\b\u001b[K"]
[4.179341, "o", "t"]
[4.232473, "o", " "]
[4.452982, "o", "A"]
[4.549195, "o", "c"]
[4.76451, "o", "tivityJournal.txt "]
[4.806999, "o", "\r\n"]
[4.84562, "o", "\u001b[?1h\u001b=\r"]
[4.869007, "o", "\u001b[38;5;238m───────┬─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\u001b[0m\u001b[m\r\n       \u001b[38;5;238m│ \u001b[0mFile: \u001b[1mActivityJournal.txt\u001b[0m\u001b[m\r\n"]
[4.869329, "o", "\u001b[38;5;238m───────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\u001b[0m\u001b[m\r\n"]
[4.869974, "o", "\u001b[38;5;238m   1\u001b[0m   \u001b[38;5;238m│\u001b[0m \u001b[38;5;231mActivity Journal\u001b[0m\u001b[m\r\n\u001b[38;5;238m   2\u001b[0m   \u001b[38;5;238m│\u001b[0m \u001b[m\r\n\u001b[38;5;238m   3\u001b[0m   \u001b[38;5;238m│\u001b[0m \u001b[38;5;231mName: Colton Hagan\u001b[0m\u001b[m\r\n\u001b[38;5;238m   4\u001b[0m   \u001b[38;5;238m│\u001b[0m \u001b[m\r\n\u001b[38;5;238m   5\u001b[0m   \u001b[38;5;238m│\u001b[0m \u001b[38;5;231m================================================================\u001b[0m\u001b[m\r\n\u001b[38;5;238m   6\u001b[0m   \u001b[38;5;238m│\u001b[0m \u001b[38;5;231mStart\u001b[0m\u001b[m\r\n\u001b[38;5;238m   7\u001b[0m   \u001b[38;5;238m│\u001b[0m \u001b[38;5;231mEstimated Time  1HH 0MM\u001b[0m\u001b[m\r\n\u001b[38;5;238m   8\u001b[0m   \u001b[38;5;238m│\u001b[0m \u001b[38;5;231mPlan: To read through the provided librays (stdlib.h, stdio.h, and ctype.h) and the getChar() libray. Then make sure I know how to read \u001b[0m\u001b[m\r\n\u001b[38;5;238m    \u001b[0m   \u001b[38;5;238m│\u001b[0m \u001b[38;5;231minput by just printing out the input char by char. Test this and work out errors. Then move on to the bulk of the assignment of finding \u001b[0m\u001b[m\r\n\u001b[38;5;238m    \u001b[0m   \u001b[38;5;238m│\u001b[0m \u001b[38;5;231mchars, lines, and words alternating writing and testing"]
[4.870183, "o", " code until my input for a varity of tests matches the unix wc function.\u001b[0m\u001b[m\r\n\u001b[38;5;238m   9\u001b[0m   \u001b[38;5;238m│\u001b[0m \u001b[m\r\n\u001b[38;5;238m  10\u001b[0m   \u001b[38;5;238m│\u001b[0m \u001b[38;5;231mComplete\u001b[0m\u001b[m\r\n\u001b[38;5;238m  11\u001b[0m   \u001b[38;5;238m│\u001b[0m \u001b[38;5;231mActual Time 0HH 30MM\u001b[0m\u001b[m\r\n\u001b[38;5;238m  12\u001b[0m   \u001b[38;5;238m│\u001b[0m \u001b[38;5;231mObservations: This went incredably smooth, I basically had no issues as everything worked basically on the first try. The only small iss\u001b[0m\u001b[m\r\n\u001b[38;5;238m    \u001b[0m   \u001b[38;5;238m│\u001b[0m \u001b[38;5;231mue I had was figuring out that a new line could occur with either '\\n' or '/0' since the file ends on a line. However, outside that and \u001b[0m\u001b[m\r\n\u001b[38;5;238m    \u001b[0m   \u001b[38;5;238m│\u001b[0m \u001b[38;5;231mcould basic coding mistakes on my end (forgetting something simple) everything went well. The whole proccess of reading in a txt file us\u001b[0m\u001b[m\r\n\u001b[38;5;238m    \u001b[0m   \u001b[38;5;238m│\u001b[0m \u001b[38;5;231ming getChar() instead of some other proccess where we use scanf to get a file name and then using a File"]
[4.870312, "o", " variable we fetch it from our d\u001b[0m\u001b[m\r\n\u001b[38;5;238m    \u001b[0m   \u001b[38;5;238m│\u001b[0m \u001b[38;5;231mirectory is also a way I would never have thought to do things.\u001b[0m\u001b[m\r\n\u001b[38;5;238m  13\u001b[0m   \u001b[38;5;238m│\u001b[0m \u001b[38;5;231m================================================================\u001b[0m\u001b[m\r\n\u001b[38;5;238m───────┴─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\u001b[0m\u001b[m\r\n"]
[4.870735, "o", "\r\u001b[K\u001b[?1l\u001b>"]
[4.873689, "o", "\u001b[01;32mvagrant@ubuntu-bionic\u001b[00m:\u001b[01;34m/vagrant/grading-347-2pm/repos/haganc3/WordCount\u001b[00m$ "]
[22.38239, "o", "\r(reverse-i-search)`': \u001b[K"]
[22.550805, "o", "\b\b\bg': git add wwuwc.c\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"]
[22.593903, "o", "\b\b\br': bash -x /347/grade-wordcount-script \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"]
[22.659841, "o", "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\u001b[1@a\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C"]
[22.724721, "o", "\r\u001b[01;32mvagrant@ubuntu-bionic\u001b[00m:\u001b[01;34m/vagrant/grading-347-2pm/repos/haganc3/WordCount\u001b[00m$ bash -x /347/grade-wordcount-script \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r\n"]
[22.731788, "o", "+ cp '/347/cs347-teaching-materials/activities/word count/wwuwc/DarkAndStormyNight.txt' '/347/cs347-teaching-materials/activities/word count/wwuwc/Raven.txt' ."]
[22.732003, "o", "\r\n"]
[22.742666, "o", "+ gcc -o wwuwc wwuwc.c"]
[22.742869, "o", "\r\n"]
[22.78947, "o", "+ wc ActivityJournal.txt DarkAndStormyNight.txt Raven.txt"]
[22.78969, "o", "\r\n"]
[22.791642, "o", "  13  200 1236 ActivityJournal.txt\r\n"]
[22.792295, "o", "  11   64  375 DarkAndStormyNight.txt\r\n"]
[22.793126, "o", " 124 1067 6690 Raven.txt\r\n"]
[22.793403, "o", " 148 1331 8301 total"]
[22.79358, "o", "\r\n"]
[22.79392, "o", "+ ./wwuwc"]
[22.794071, "o", "\r\n"]
[22.796569, "o", " 11 64 375\r\n"]
[22.797354, "o", "+ ./wwuwc"]
[22.797524, "o", "\r\n"]
[22.799935, "o", " 124 1066 6690\r\n"]
[22.800732, "o", "+ git add DarkAndStormyNight.txt Raven.txt"]
[22.800869, "o", "\r\n"]
[22.832711, "o", "\u001b[01;32mvagrant@ubuntu-bionic\u001b[00m:\u001b[01;34m/vagrant/grading-347-2pm/repos/haganc3/WordCount\u001b[00m$ "]
[26.850753, "o", "\r(reverse-i-search)`': \u001b[K"]
[27.053653, "o", "\b\b\b\u001b[25@v': bat ActivityJournal.txt\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"]
[27.109425, "o", "\b\b\b\b\b\b\b\b\b\b\b\u001b[1@i\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C"]
[27.15294, "o", "\b\b\b\b\b\b\b\b\b\b\b\u001b[12Pm': vim wwuwc.c\b\b\b\b\b\b\b\b\b\b\b"]
[27.33619, "o", "\r\u001b[01;32mvagrant@ubuntu-bionic\u001b[00m:\u001b[01;34m/vagrant/grading-347-2pm/repos/haganc3/WordCount\u001b[00m$ vim wwuwc.c\b\b\b\b\b\b\b\b\b\b\b\r\n"]
[27.4072, "o", "\u001b[?1049h\u001b[22;0;0t\u001b[?1h\u001b=\u001b[H\u001b[J\u001b]11;?\u0007\u001b[?2004h\u001b[34h\u001b[?25h"]
[27.448051, "o", "\u001b[?25l\u001b[m\u000f\u001b[H\u001b[J\u001b[?1004h\u001b[34h\u001b[?25h"]
[27.488983, "o", "\u001b[?25l\u001b[93m  1 \u001b[m\u000f\u001b[96m/*\u001b[m\u000f\u001b[K\r\n\u001b[93m  2 \u001b[m\u000f\u001b[96mName : Colton Hagan\u001b[m\u000f\u001b[K\r\n\u001b[93m  3 \u001b[m\u000f\u001b[96mDate : 1/19/21\u001b[m\u000f\u001b[K\r\n\u001b[93m  4 \u001b[m\u000f\u001b[96mClass : CS 347\u001b[m\u000f\u001b[K\r\n\u001b[93m  5 \u001b[m\u000f\u001b[96mProgram : Reads in a string and outputs the number of chars, lines, and\u001b[m\u000f\u001b[K\r\n\u001b[93m  6 \u001b[m\u000f\u001b[96m          words contained in the string similar to wc unix function\u001b[m\u000f\u001b[K\r\n\u001b[93m  7 \u001b[m\u000f\u001b[96m*/\u001b[m\u000f\u001b[K\r\n\u001b[93m  8 \u001b[m\u000f\u001b[38;5;81m#include \u001b[m\u000f\u001b[95m<stdlib.h>\u001b[m\u000f\u001b[K\r\n\u001b[93m  9 \u001b[m\u000f\u001b[38;5;81m#include \u001b[m\u000f\u001b[95m<stdio.h>\u001b[m\u000f\u001b[K\r\n\u001b[93m 10 \u001b[m\u000f\u001b[38;5;81m#include \u001b[m\u000f\u001b[95m<ctype.h>\u001b[m\u000f\u001b[K\r\n\u001b[93m 11 \u001b[m\u000f\u001b[K\r\n\u001b[93m 12 \u001b[m\u000f\u001b[38;5;81m#define FALSE (\u001b[m\u000f\u001b[95m0\u001b[m\u000f\u001b[38;5;81m)\u001b[m\u000f\u001b[K\r\n\u001b[93m 13 \u001b[m\u000f\u001b[38;5;81m#define TRUE  (\u001b[m\u000f\u001b[95m1\u001b[m\u000f\u001b[38;5;81m)\u001b[m\u000f\u001b[K\r\n\u001b[93m 14 \u001b[m\u000f\u001b[K\r\n\u001b[93m 15 \u001b[m\u000f\u001b[38;5;121mint\u001b[m\u000f main() {\u001b[K\r\n\u001b[93m 16 \u001b[m\u000f        \u001b[38;5;121mint\u001b[m\u000f tot_chars = \u001b[95m0\u001b[m\u000f ;     \u001b[96m/* total characters */\u001b[m\u000f\u001b[K\r\n\u001b[93m 17 \u001b[m\u000f        \u001b[38;5;121mint\u001b[m\u000f tot_lines = \u001b[95m0\u001b[m\u000f ;     \u001b[96m/* total lines */\u001b[m\u000f\u001b[K\r\n\u001b[93m 18 \u001b[m\u000f        \u001b[38;5;121m"]
[27.489303, "o", "int\u001b[m\u000f tot_words = \u001b[95m0\u001b[m\u000f ;     \u001b[96m/* total words */\u001b[m\u000f\u001b[K\r\n\u001b[93m 19 \u001b[m\u000f        \u001b[38;5;121mint\u001b[m\u000f curr_char; \u001b[96m/* char you are reading */\u001b[m\u000f\u001b[K\r\n\u001b[93m 20 \u001b[m\u000f        \u001b[38;5;121mint\u001b[m\u000f has_word = \u001b[95m0\u001b[m\u000f; \u001b[96m/* if we have had a word */\u001b[m\u000f\u001b[K\r\n\u001b[93m 21 \u001b[m\u000f        \u001b[K\r\n\u001b[93m 22 \u001b[m\u000f        \u001b[96m//Reads the chars from an input untill an EOF\u001b[m\u000f\u001b[K\r\n\u001b[93m 23 \u001b[m\u000f        \u001b[93mwhile\u001b[m\u000f((curr_char = getchar()) != \u001b[95mEOF\u001b[m\u000f) {\u001b[K\r\n\u001b[93m 24 \u001b[m\u000f            \u001b[96m//Since we are reading chars each we can simply increment here\u001b[m\u000f\u001b[K\r\n\u001b[93m 25 \u001b[m\u000f            tot_chars++;\u001b[K\r\n\u001b[93m 26 \u001b[m\u000f            \u001b[96m/*if there is a whitespace we know that\u001b[m\u000f\u001b[K\r\n\u001b[93m 27 \u001b[m\u000f\u001b[96m              the prevous chars made up a word */\u001b[m\u000f\u001b[K\r\n\u001b[93m 28 \u001b[m\u000f            \u001b[93mif\u001b[m\u000f(isspace(curr_char)) {\u001b[K\r\n\u001b[93m 29 \u001b[m\u000f                \u001b[93mif\u001b[m\u000f(has_word == \u001b[95m1\u001b[m\u000f) {\u001b[K\r\n\u001b[93m 30 \u001b[m\u000f                    tot_words++;\u001b[K\r\n\u001b[93m 31 \u001b[m\u000f                    has_word = \u001b[95m0\u001b[m\u000f;\u001b[K\r\n\u001b[93m 32 \u001b[m\u000f                }\u001b"]
[27.48938, "o", "[K\r\n\u001b[93m 33 \u001b[m\u000f            } \u001b[93melse\u001b[m\u000f {\u001b[K\r\n\u001b[93m 34 \u001b[m\u000f                has_word = \u001b[95m1\u001b[m\u000f;\u001b[K\r\n\u001b[93m 35 \u001b[m\u000f            }\u001b[K\r\n\u001b[93m 36 \u001b[m\u000f            \u001b[96m/*There is a line if there is a new line symbol\u001b[m\u000f\u001b[K\r\n\u001b[93m 37 \u001b[m\u000f\u001b[96m              or if the input ends (since it will always be on a line*/\u001b[m\u000f\u001b[K\r\n\u001b[93m 38 \u001b[m\u000f            \u001b[93mif\u001b[m\u000f(curr_char == \u001b[38;5;224m'\\n'\u001b[m\u000f || curr_char == \u001b[38;5;224m'\\0'\u001b[m\u000f) {\u001b[K\r\n\u001b[93m 39 \u001b[m\u000f                tot_lines++;\u001b[K\r\n\u001b[93m 40 \u001b[m\u000f            }\u001b[K\r\n\u001b[93m 41 \u001b[m\u000f        }\u001b[K\r\n\u001b[93m 42 \u001b[m\u000f        \u001b[96m//Prints output\u001b[m\u000f\u001b[K\r\n\u001b[93m 43 \u001b[m\u000f        printf(\u001b[95m\" \u001b[m\u000f\u001b[38;5;224m%d\u001b[m\u000f\u001b[95m \u001b[m\u000f\u001b[38;5;224m%d\u001b[m\u000f\u001b[95m \u001b[m\u000f\u001b[38;5;224m%d\\n\u001b[m\u000f\u001b[95m\"\u001b[m\u000f, tot_lines, tot_words, tot_chars);\u001b[K\r\n\u001b[93m 44 \u001b[m\u000f        \u001b[93mreturn\u001b[m\u000f \u001b[95m0\u001b[m\u000f;\u001b[K\r\n\u001b[93m 45 \u001b[m\u000f}\u001b[K\r\n\u001b[94m~\u001b[K\r\n~\u001b[K\r\n~\u001b[K\r\n~\u001b[K\r\n~\u001b[K\r\n~\u001b[K\r\n~\u001b[K\r\n\u001b[0;1;7m\u000fwwuwc.c                                                                                                                        1,1            All"]
[27.489451, "o", "\u001b[2 q\u001b[2 q\u001b[1;5H\u001b[34h\u001b[?25h"]
[28.587504, "o", "\u001b[?25l"]
[28.587721, "o", "\u001b[54;135H\u001b[m\u000f~@k       \u001b[1;5H\u001b[34h\u001b[?25h\u001b[?25l\u001b[54;135H   \u001b[53;128H\u001b[0;1;7m\u000f2\u001b[2;5H\u001b[34h\u001b[?25h"]
[29.09001, "o", "\u001b[?25l\u001b[54;135H\u001b[m\u000f~@k\u001b[2;5H\u001b[34h\u001b[?25h\u001b[?25l\u001b[54;135H   \u001b[53;128H\u001b[0;1;7m\u000f3\u001b[3;5H\u001b[34h\u001b[?25h"]
[29.121826, "o", "\u001b[?25l\u001b[54;135H\u001b[m\u000f~@k\u001b[3;5H\u001b[34h\u001b[?25h\u001b[?25l\u001b[54;135H   \u001b[53;128H\u001b[0;1;7m\u000f4\u001b[4;5H\u001b[34h\u001b[?25h"]
[29.16678, "o", "\u001b[?25l\u001b[54;135H\u001b[m\u000f~@k\u001b[4;5H\u001b[34h\u001b[?25h\u001b[?25l\u001b[54;135H   \u001b[53;128H\u001b[0;1;7m\u000f5\u001b[5;5H\u001b[34h\u001b[?25h"]
[29.198361, "o", "\u001b[?25l\u001b[54;135H\u001b[m\u000f~@k\u001b[5;5H\u001b[34h\u001b[?25h\u001b[?25l\u001b[54;135H   \u001b[53;128H\u001b[0;1;7m\u000f6\u001b[6;5H\u001b[34h\u001b[?25h"]
[29.229476, "o", "\u001b[?25l\u001b[54;135H\u001b[m\u000f~@k\u001b[6;5H\u001b[34h\u001b[?25h\u001b[?25l\u001b[54;135H   \u001b[53;128H\u001b[0;1;7m\u000f7\u001b[7;5H\u001b[34h\u001b[?25h"]
[29.259012, "o", "\u001b[?25l\u001b[54;135H\u001b[m\u000f~@k\u001b[7;5H\u001b[34h\u001b[?25h\u001b[?25l\u001b[54;135H   \u001b[53;128H\u001b[0;1;7m\u000f8\u001b[8;5H\u001b[34h\u001b[?25h"]
[29.298765, "o", "\u001b[?25l"]
[29.298968, "o", "\u001b[54;135H\u001b[m\u000f~@k\u001b[8;5H"]
[29.299135, "o", "\u001b[34h\u001b[?25h"]
[29.299361, "o", "\u001b[?25l"]
[29.299488, "o", "\u001b[54;135H   \u001b[53;128H\u001b[0;1;7m\u000f9\u001b[9;5H"]
[29.299636, "o", "\u001b[34h\u001b[?25h"]
[29.34276, "o", "\u001b[?25l"]
[29.342969, "o", "\u001b[54;135H\u001b[m\u000f~@k\u001b[9;5H"]
[29.343141, "o", "\u001b[34h\u001b[?25h"]
[29.343825, "o", "\u001b[?25l"]
[29.343952, "o", "\u001b[54;135H   \u001b[53;128H\u001b[0;1;7m\u000f10,1\u001b[10;5H"]
[29.344071, "o", "\u001b[34h\u001b[?25h"]
[29.365433, "o", "\u001b[?25l"]
[29.36564, "o", "\u001b[54;135H\u001b[m\u000f~@k\u001b[10;5H"]
[29.365753, "o", "\u001b[34h\u001b[?25h"]
[29.366307, "o", "\u001b[?25l"]
[29.366421, "o", "\u001b[54;135H   \u001b[53;129H\u001b[0;1;7m\u000f1,0-1\u001b[11;5H"]
[29.366546, "o", "\u001b[34h\u001b[?25h"]
[29.38701, "o", "\u001b[?25l"]
[29.387224, "o", "\u001b[54;135H\u001b[m\u000f~@k\u001b[11;5H"]
[29.387418, "o", "\u001b[34h\u001b[?25h"]
[29.388069, "o", "\u001b[?25l"]
[29.388183, "o", "\u001b[54;135H   \u001b[53;129H\u001b[0;1;7m\u000f2,1  \u001b[12;5H"]
[29.388283, "o", "\u001b[34h\u001b[?25h"]
[29.430745, "o", "\u001b[?25l"]
[29.43098, "o", "\u001b[54;135H\u001b[m\u000f~@k\u001b[12;5H"]
[29.431115, "o", "\u001b[34h\u001b[?25h"]
[29.431675, "o", "\u001b[?25l"]
[29.431782, "o", "\u001b[54;135H   \u001b[53;129H\u001b[0;1;7m\u000f3\u001b[13;5H"]
[29.431906, "o", "\u001b[34h\u001b[?25h"]
[29.462743, "o", "\u001b[?25l"]
[29.462926, "o", "\u001b[54;135H\u001b[m\u000f~@k\u001b[13;5H"]
[29.463045, "o", "\u001b[34h\u001b[?25h"]
[29.463634, "o", "\u001b[?25l"]
[29.463747, "o", "\u001b[54;135H   \u001b[53;129H\u001b[0;1;7m\u000f4,0-1\u001b[14;5H"]
[29.463888, "o", "\u001b[34h\u001b[?25h"]
[29.493533, "o", "\u001b[?25l"]
[29.493769, "o", "\u001b[54;135H\u001b[m\u000f~@k\u001b[14;5H"]
[29.493958, "o", "\u001b[34h\u001b[?25h"]
[29.494226, "o", "\u001b[?25l"]
[29.494349, "o", "\u001b[54;135H   \u001b[53;129H\u001b[0;1;7m\u000f5,1  \u001b[15;5H"]
[29.494484, "o", "\u001b[34h\u001b[?25h"]
[29.526537, "o", "\u001b[?25l"]
[29.526731, "o", "\u001b[54;135H\u001b[m\u000f~@k\u001b[15;5H"]
[29.52685, "o", "\u001b[34h\u001b[?25h"]
[29.52726, "o", "\u001b[?25l"]
[29.52739, "o", "\u001b[54;135H   \u001b[53;129H\u001b[0;1;7m\u000f6,1-8\u001b[16;12H"]
[29.527579, "o", "\u001b[34h\u001b[?25h"]
[29.558542, "o", "\u001b[?25l"]
[29.558745, "o", "\u001b[54;135H\u001b[m\u000f~@k\u001b[16;12H"]
[29.558867, "o", "\u001b[34h\u001b[?25h"]
[29.559338, "o", "\u001b[?25l"]
[29.559435, "o", "\u001b[54;135H   \u001b[53;129H\u001b[0;1;7m\u000f7\u001b[17;12H"]
[29.559548, "o", "\u001b[34h\u001b[?25h"]
[29.586521, "o", "\u001b[?25l"]
[29.58671, "o", "\u001b[54;135H\u001b[m\u000f~@k\u001b[17;12H"]
[29.586852, "o", "\u001b[34h\u001b[?25h"]
[29.587373, "o", "\u001b[?25l"]
[29.58747, "o", "\u001b[54;135H   \u001b[53;129H\u001b[0;1;7m\u000f8\u001b[18;12H"]
[29.58757, "o", "\u001b[34h\u001b[?25h"]
[29.617417, "o", "\u001b[?25l"]
[29.617635, "o", "\u001b[54;135H\u001b[m\u000f~@k\u001b[18;12H"]
[29.617809, "o", "\u001b[34h\u001b[?25h"]
[29.618117, "o", "\u001b[?25l"]
[29.618227, "o", "\u001b[54;135H   \u001b[53;129H\u001b[0;1;7m\u000f9\u001b[19;12H"]
[29.61834, "o", "\u001b[34h\u001b[?25h"]
[29.649274, "o", "\u001b[?25l"]
[29.649495, "o", "\u001b[54;135H\u001b[m\u000f~@k\u001b[19;12H"]
[29.649616, "o", "\u001b[34h\u001b[?25h"]
[29.650118, "o", "\u001b[?25l"]
[29.650233, "o", "\u001b[54;135H   \u001b[53;128H\u001b[0;1;7m\u000f20\u001b[20;12H"]
[29.650364, "o", "\u001b[34h\u001b[?25h"]
[29.680531, "o", "\u001b[?25l"]
[29.680715, "o", "\u001b[54;135H\u001b[m\u000f~@k\u001b[20;12H"]
[29.680833, "o", "\u001b[34h\u001b[?25h"]
[29.681219, "o", "\u001b[?25l"]
[29.681318, "o", "\u001b[54;135H   \u001b[53;129H\u001b[0;1;7m\u000f1\u001b[21;12H"]
[29.681437, "o", "\u001b[34h\u001b[?25h"]
[30.112578, "o", "\u001b[?25l"]
[30.112807, "o", "\u001b[54;135H\u001b[m\u000f~@k\u001b[21;12H\u001b[34h\u001b[?25h"]
[30.113332, "o", "\u001b[?25l"]
[30.113455, "o", "\u001b[54;135H   \u001b[53;129H\u001b[0;1;7m\u000f2\u001b[22;12H\u001b[34h\u001b[?25h"]
[55.487965, "o", "\u001b[?25l"]
[55.488176, "o", "\u001b[54;135H\u001b[m\u000f:\u001b[22;12H\u001b[34h\u001b[?25h\u001b[?25l\r\u001b[32B\u001b[J:\u001b[2 q\u001b[34h\u001b[?25h"]
[56.624653, "o", "\u001b[?25l"]
[56.624983, "o", "\r\u001b[54;1H \u001b[2 q\u001b[34h\u001b[?25h\u001b[?25l\u001b[133C:\r\u001b[C\u001b[34h\u001b[?25h\u001b[?25l\u001b[133C \r\u001b[54;1H:\u001b[2 q\u001b[34h\u001b[?25h"]
[56.812501, "o", "\u001b[?25ls\u001b[34h\u001b[?25h"]
[56.870183, "o", "\u001b[?25le\u001b[34h\u001b[?25h"]
[56.916559, "o", "\u001b[?25lt\u001b[34h\u001b[?25h"]
[57.034167, "o", "\u001b[?25l\u001b[C\u001b[34h\u001b[?25h"]
[57.765058, "o", "\u001b[?25lt\u001b[34h\u001b[?25h"]
[57.818284, "o", "\u001b[?25ls\u001b[34h\u001b[?25h"]
[58.053563, "o", "\u001b[?25l=\u001b[34h\u001b[?25h"]
[58.116678, "o", "\u001b[?25l4\u001b[34h\u001b[?25h"]
[58.291298, "o", "\u001b[?25l\r\u001b[54;1H\u001b[34h\u001b[?25h"]
[58.296116, "o", "\u001b[?25l\u001b[16;9H\u001b[38;5;121mint\u001b[m\u000f tot_chars = \u001b[95m0\u001b[m\u000f ; \u001b[96m/* total characters */\u001b[m\u000f        \u001b[17;9H\u001b[38;5;121mint\u001b[m\u000f tot_lines = \u001b[95m0\u001b[m\u000f ; \u001b[96m/* total lines */\u001b[m\u000f        \u001b[18;9H\u001b[38;5;121mint\u001b[m\u000f tot_words = \u001b[95m0\u001b[m\u000f ; \u001b[96m/* total words */\u001b[m\u000f        \u001b[19;9H\u001b[38;5;121mint\u001b[m\u000f curr_char; \u001b[96m/* char you are reading */\u001b[m\u000f    \u001b[20;9H\u001b[38;5;121mint\u001b[m\u000f has_word = \u001b[95m0\u001b[m\u000f; \u001b[96m/* if we have had a word */\u001b[m\u000f    \u001b[22;9H\u001b[96m//Reads the chars from an input untill an EOF\u001b[m\u000f    \u001b[23;9H\u001b[93mwhile\u001b[m\u000f((curr_char = getchar()) != \u001b[95mEOF\u001b[m\u000f) {    \u001b[24;13H\u001b[96m//Since we are reading chars each we can simply increment here\u001b[m\u000f    \u001b[25;13Htot_chars++;    \u001b[26;13H\u001b[96m/*if there is a whitespace we know that\u001b[m\u000f    \u001b[27;15H\u001b[96mthe prevous chars made up a word */\u001b[m\u000f    \u001b[28;13H\u001b[93mif\u001b[m\u000f(isspace(curr_char)) {    \u001b[29;17H\u001b[93mif\u001b[m\u000f(has_word == \u001b[95m1\u001b[m\u000f) {    \u001b[30;17Htot_words++;        \u001b[31;17Hhas_word = \u001b[95m0\u001b[m\u000f;        \u001b[32;13H}        \u001b[33;13H} \u001b[93melse\u001b[m\u000f {    \u001b[34;13Hhas_word = \u001b[95m1\u001b[m\u000f; "]
[58.296193, "o", "       \u001b[35;13H}    \u001b[36;13H\u001b[96m/*There is a line if there is a new line symbol\u001b[m\u000f    \u001b[37;15H\u001b[96mor if the input ends (since it will always be on a line*/\u001b[m\u000f    \u001b[38;13H\u001b[93mif\u001b[m\u000f(curr_char == \u001b[38;5;224m'\\n'\u001b[m\u000f || curr_char == \u001b[38;5;224m'\\0'\u001b[m\u000f) {    \u001b[39;17Htot_lines++;    \u001b[40;13H}    \u001b[41;9H}    \u001b[53;133H\u001b[0;1;7m\u000f4\u001b[2 q\u001b[22;8H\u001b[34h\u001b[?25h"]
[59.407624, "o", "\u001b[?25l\u001b[54;135H\u001b[m\u000f:\u001b[22;8H\u001b[34h\u001b[?25h\u001b[?25l\r\u001b[32B                                                                                                                                       \r\u001b[54;1H:\u001b[2 q\u001b[34h\u001b[?25h"]
[59.567426, "o", "\u001b[?25ls\u001b[34h\u001b[?25h"]
[59.627963, "o", "\u001b[?25le\u001b[34h\u001b[?25h"]
[59.680065, "o", "\u001b[?25lt\u001b[34h\u001b[?25h"]
[61.993737, "o", "\u001b[?25l\u001b[C\u001b[34h\u001b[?25h"]
[62.090347, "o", "\u001b[?25ll\u001b[34h\u001b[?25h"]
[62.129137, "o", "\u001b[?25li\u001b[34h\u001b[?25h"]
[62.230392, "o", "\u001b[?25ls\u001b[34h\u001b[?25h"]
[62.289315, "o", "\u001b[?25lt\u001b[34h\u001b[?25h"]
[62.359917, "o", "\u001b[?25l\r\u001b[54;1H\u001b[34h\u001b[?25h\u001b[?25l\u001b[16;5H\u001b[94m>   \u001b[m\u000f\u001b[38;5;121mint\u001b[m\u000f tot_chars = \u001b[95m0\u001b[m\u000f ;\u001b[94m>\u001b[17;5H>   \u001b[m\u000f\u001b[38;5;121mint\u001b[m\u000f tot_lines = \u001b[95m0\u001b[m\u000f ;\u001b[94m>\u001b[18;5H>   \u001b[m\u000f\u001b[38;5;121mint\u001b[m\u000f tot_words = \u001b[95m0\u001b[m\u000f ;\u001b[94m>\u001b[19;5H>   \u001b[20;5H>   \u001b[21;5H>   \u001b[22;5H>   \u001b[23;5H>   \u001b[24;5H>   \u001b[25;5H>   \u001b[26;5H>   \u001b[27;5H>   \u001b[28;5H>   \u001b[29;5H>   \u001b[m\u000f    \u001b[94m>   \u001b[30;5H>   >   \u001b[31;5H>   >   \u001b[32;5H>   >   \u001b[33;5H>   \u001b[34;5H>   >   \u001b[35;5H>   \u001b[36;5H>   \u001b[37;5H>   \u001b[38;5H>   \u001b[39;5H>   \u001b[40;5H>   \u001b[41;5H>   \n>   \u001b[43;9H>   \u001b[44;9H>   \u001b[53;132H\u001b[0;1;7m\u000f  \u001b[2 q\u001b[22;5H\u001b[34h\u001b[?25h"]
[62.618323, "o", "\u001b[?25l\u001b[54;135H\u001b[m\u000f:\u001b[22;5H\u001b[34h\u001b[?25h\u001b[?25l\r\u001b[32B                                                                                                                                       \r\u001b[54;1H:\u001b[2 q\u001b[34h\u001b[?25h"]
[63.046885, "o", "\u001b[?25ls\u001b[34h\u001b[?25h"]
[63.138403, "o", "\u001b[?25le\u001b[34h\u001b[?25h"]
[63.200969, "o", "\u001b[?25lt\u001b[34h\u001b[?25h"]
[64.529914, "o", "\u001b[?25l\u001b[C\u001b[34h\u001b[?25h"]
[64.61841, "o", "\u001b[?25lt\u001b[34h\u001b[?25h"]
[64.646729, "o", "\u001b[?25ls\u001b[34h\u001b[?25h"]
[64.944252, "o", "\u001b[?25l=\u001b[34h\u001b[?25h"]
[65.360566, "o", "\u001b[?25l8\u001b[34h\u001b[?25h"]
[65.6041, "o", "\u001b[?25l\r\u001b[54;1H\u001b[34h\u001b[?25h"]
[65.604213, "o", "\u001b[?25l\u001b[16;9H\u001b[94m    \u001b[m\u000f\u001b[38;5;121mint\u001b[m\u000f tot_chars = \u001b[95m0\u001b[m\u000f ;\u001b[94m>    \u001b[m\u000f\u001b[96m/* total characters */\u001b[17;9H\u001b[m\u000f\u001b[94m    \u001b[m\u000f\u001b[38;5;121mint\u001b[m\u000f tot_lines = \u001b[95m0\u001b[m\u000f ;\u001b[94m>    \u001b[m\u000f\u001b[96m/* total lines */\u001b[18;9H\u001b[m\u000f\u001b[94m    \u001b[m\u000f\u001b[38;5;121mint\u001b[m\u000f tot_words = \u001b[95m0\u001b[m\u000f ;\u001b[94m>    \u001b[m\u000f\u001b[96m/* total words */\u001b[19;9H\u001b[m\u000f\u001b[94m    \u001b[m\u000f\u001b[38;5;121mint\u001b[m\u000f curr_char; \u001b[96m/* char you are reading */\u001b[20;9H\u001b[m\u000f\u001b[94m    \u001b[m\u000f\u001b[38;5;121mint\u001b[m\u000f has_word = \u001b[95m0\u001b[m\u000f; \u001b[96m/* if we have had a word */\u001b[21;9H\u001b[m\u000f\u001b[94m    \u001b[22;9H    \u001b[m\u000f\u001b[96m//Reads the chars from an input untill an EOF\u001b[23;9H\u001b[m\u000f\u001b[94m    \u001b[m\u000f\u001b[93mwhile\u001b[m\u000f((curr_char = getchar()) != \u001b[95mEOF\u001b[m\u000f) {\u001b[24;9H\u001b[94m    \u001b[m\u000f    \u001b[96m//Since we are reading chars each we can simply increment here\u001b[25;9H\u001b[m\u000f\u001b[94m    \u001b[m\u000f    tot_chars++;\u001b[26;9H\u001b[94m    \u001b[m\u000f    \u001b[96m/*if there is a whitespace we know that\u001b[27;9H\u001b[m\u000f\u001b[94m    \u001b[m\u000f\u001b[96m      the prevous chars made up a word */\u001b[28;9H\u001b[m\u000f\u001b[94m    \u001b[m\u000f    \u001b[93mif\u001b[m\u000f(isspace(curr_char)) {\u001b[29;9H\u001b[94m    \u001b[m\u000f    \u001b[94m"]
[65.604256, "o", ">   \u001b[m\u000f\u001b[93mif\u001b[m\u000f(has_word == \u001b[95m1\u001b[m\u000f) {\u001b[30;9H\u001b[94m    >       \u001b[m\u000f    tot_words++;\u001b[31;9H\u001b[94m    >       \u001b[m\u000f    has_word = \u001b[95m0\u001b[m\u000f;\u001b[32;9H\u001b[94m    >       \u001b[m\u000f}\u001b[33;9H\u001b[94m    \u001b[m\u000f    } \u001b[93melse\u001b[m\u000f {\u001b[34;9H\u001b[94m    >       \u001b[m\u000fhas_word = \u001b[95m1\u001b[m\u000f;\u001b[35;9H\u001b[94m    \u001b[m\u000f    }\u001b[36;9H\u001b[94m    \u001b[m\u000f    \u001b[96m/*There is a line if there is a new line symbol\u001b[37;9H\u001b[m\u000f\u001b[94m    \u001b[m\u000f\u001b[96m      or if the input ends (since it will always be on a line*/\u001b[38;9H\u001b[m\u000f\u001b[94m    \u001b[m\u000f    \u001b[93mif\u001b[m\u000f(curr_char == \u001b[38;5;224m'\\n'\u001b[m\u000f || curr_char == \u001b[38;5;224m'\\0'\u001b[m\u000f) {\u001b[39;9H\u001b[94m    \u001b[m\u000f        tot_lines++;\u001b[40;9H\u001b[94m    \u001b[m\u000f    }\u001b[41;9H\u001b[94m    \u001b[m\u000f}\u001b[2 q\u001b[22;5H\u001b[34h\u001b[?25h"]
[99.054698, "o", "\u001b[?25l\u001b[54;135H^[\u001b[22;5H\u001b[34h\u001b[?25h\u001b[?25l\u001b[54;135H  \u001b[22;5H\u001b[34h\u001b[?25h"]
[100.501912, "o", "\u001b[?25l\u001b[54;135H:\u001b[22;5H\u001b[34h\u001b[?25h\u001b[?25l\r\u001b[32B                                                                                                                                       \r\u001b[54;1H:\u001b[2 q\u001b[34h\u001b[?25h"]
[100.737478, "o", "\u001b[?25lw\u001b[34h\u001b[?25h"]
[100.800306, "o", "\u001b[?25lq\u001b[34h\u001b[?25h"]
[100.990952, "o", "\u001b[?25l\r\u001b[54;1H\u001b[34h\u001b[?25h"]
[100.995868, "o", "\u001b[?25l\"wwuwc.c\"\u001b[2 q\u001b[34h\u001b[?25h"]
[101.078714, "o", "\u001b[?25l\u001b[C45L, 1216C written\r\u001b[54;1H\u001b[34h\u001b[?25h\u001b[?25l\u001b[2 q\u001b[m\u000f\u001b[34h\u001b[?25h\u001b[?1l\u001b>\u001b[?1049l\u001b[23;0;0t\u001b[?2004l\u001b[?1004l\u001b[34h\u001b[?25h"]
[101.097934, "o", "g"]
[101.115938, "o", "\u001b[01;32mvagrant@ubuntu-bionic\u001b[00m:\u001b[01;34m/vagrant/grading-347-2pm/repos/haganc3/WordCount\u001b[00m$ "]
[101.116376, "o", "g"]
[101.182059, "o", "i"]
[101.30172, "o", "t"]
[101.375163, "o", " "]
[101.499811, "o", "a"]
[101.599261, "o", "d"]
[101.766333, "o", "d"]
[101.84173, "o", " "]
[102.223686, "o", "!"]
[102.320006, "o", "$"]
[102.443977, "o", "\r\ngit add wwuwc.c\r\n"]
[102.469215, "o", "\u001b[01;32mvagrant@ubuntu-bionic\u001b[00m:\u001b[01;34m/vagrant/grading-347-2pm/repos/haganc3/WordCount\u001b[00m$ "]
[102.829378, "o", "exit\r\n"]
